services:
  backend:
    container_name: backend
    build:
      dockerfile: docker/backend/Dockerfile
    env_file:
      ./.env
    restart: always
    volumes:
      - ./src:/opt/app
    ports:
      - "8000:8000"
  
  celery:
    container_name: celery
    build:
      dockerfile: docker/celery/Dockerfile
    command: celery -A backend.find worker --loglevel=DEBUG
    env_file:
      ./.env
    restart: always
    volumes:
      - ./src:/opt/app


  redis:
    image: redis:latest
    container_name: redis
    env_file: ./.env
    environment:
      - REDIS_USER_NAME=${REDIS_USER_NAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    restart: always

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    env_file: ./.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER_NAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro

  postgresql:
    image: postgres:latest
    container_name: postgres
    env_file: ./.env
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER_NAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - postgres_volume:/var/run/postgresql/data
    restart: always
    ports:
      - "5432:5432"

volumes:
  postgres_volume:
  redis:
